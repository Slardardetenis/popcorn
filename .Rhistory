data2 <- read.table("pipocabitch.txt",h=T)
data3 <- cbind(data2,log(data2$pirua))
model3 <- aov(log(pirua)~as.factor(fator),data2)
C.test(model3)
model2
anova(model2)
model2 <- aov(pirua <- as.factor(fator),data2)
View(data2)
model2 <- aov(pirua <- as.factor(fator), data2)
model2 <- aov(pirua <- as.factor(data2$fator), data2)
model2
model3
model2
testtukey <- glht(model3,linfct=mcp(fator="Tukey"))
library(multcomp)
testtukey <- glht(model3,linfct=mcp(fator="Tukey"))
testtukey <- glht(model3,linfct=mcp(as.factor(fator)="Tukey"))
?t.test
?tukey.test
?Tukey.test
?glht
attach(data2)
fator
fator<- as.factor(fator)
fator
testtukey <- glht(model3,linfct=mcp(faotor="Tukey"))
testtukey <- glht(model3,linfct=mcp(fator="Tukey"))
model3
fator
model3<- aov(log(pirua ~ fator, data = data2))
model3<- aov(log(pirua) ~ fator, data = data2))
View(data2)
model3<- aov(log(pirua) ~ fator, data = data2)
model3
fator
model3<- aov(log(pirua) ~ as.factor(fator), data = data2)
model3
anova(model3)
testtukey <- glht(model3,linfct=mcp(fator="Tukey"))
testtukey <- glht(model3,linfct=mcp(as.factor(fator)="Tukey"))
testtukey
?HSD.test
?HSD.test()
library(datasets)
?HSD.test
bonfee <- HSD.test(durabilidade,tapete,gl,MERes, group=TRUE)
library(agricolae)
?HSD.test
testtukey <- HSD.test(log(data2$pirua),as.factor(fator))
df <- df.redidual(model3)
df <- df.residual(model3)
df
MSerror <- deviance(model3)/df
MSerror
anova(model3)
testtukey <- HSD.test(log(data2$pirua),as.factor(data2$fator),df,MSerror,group=TRUE)
testtukey
summary(testtukey)
plot(confint(testtukey,level=0.95))
testtukey <- HSD.test(log(data2$pirua),data2$fator,df,MSerror,group=TRUE)
testtukey
summary(testtukey)
anova(testtukey)
testtukey
plot(confint(testtukey$means))
?confint
plot(confint(model3))
data2$factor <- as.factor(data2$fator)
logg <- log(data2$pirua)
logg
model3 <- aov(logg~fator,data=data2)
model3
testtukey <- glht(model3,linfct=mcp(fator="Tukey"))
is.factor(fator)
contr <- rbind("1 - 2" = c(1, -1, 0, 0),
"1 - 3" = c(1, 0, -1, 0),
"1 - 4" = c(1, 0, 0, -1),
"2 - 3" = c(0, 1, -1, 0),
"2 - 4" = c(0, 1, 0, -1),
"3 - 4" = c(0, 0, 1, -1))
testtukey <- glht(model3,linfct=contr)
length(coef(model))
length(coef(model3))
model3
model3 <- aov(log(data2$pirua)~as.factor(fator),data=data2)
model3
testtukey <- glht(model3,linfct=contr)
testtukey
plot(confint(mcHSD,level=0.95))
plot(confint(testtukey,level=0.95))
model3
plot(confint(testtukey,level=0.95),main="comparaçoes multiplas para a média dos tratamentos")
?plot
?plot
plot(confint(testtukey,level=0.95),main="comparaçoes multiplas para a média dos tratamentos"sub="aewwww")
plot(confint(testtukey,level=0.95),main="comparaçoes multiplas para a média dos tratamentos,sub="aewwww")
plot(confint(testtukey,level=0.95),main="comparaçoes multiplas para a média dos tratamentos",sub="aewwww")
plot(confint(testtukey,level=0.95),main="Comparaçoes múltiplas para as média dos tratamentos",sub="1:óleo,2:azeite,3:margarina,4:manteiga")
plot(confint(testtukey,level=0.95),main="Comparaçoes múltiplas para as média dos tratamentos",sub="1:óleo,2:azeite,3:margarina,4:manteiga")
library(agricolae)
plot(confint(testtukey,level=0.95),main="Comparaçoes múltiplas para as média dos tratamentos",sub="1:óleo,2:azeite,3:margarina,4:manteiga")
library(multcomp)
plot(confint(testtukey,level=0.95),main="Comparaçoes múltiplas para as média dos tratamentos",sub="1:óleo,2:azeite,3:margarina,4:manteiga")
qqnorm(model3)
qqnorm(model3$res)
qqline(model3$res)
model3
qqnorm(model3$res)
qqline(model3$res)
test1 <- lm(data2$pirua~as.factor(data2$fator))
test1
anova(test1)
anova(model2)
test1
model3
library(agricolae)
library(multcomp)
library(MASS)
studres(model3)
residuals(model3)
?aov
model4 <- lm(data2$pirua~as.factor(data2$fator),data=data2,weight=1/(data$pirua))
model4 <- lm(data2$pirua~as.factor(data2$fator),data=data2,weight=1/(data2$pirua))
model4
plot(model4$res,model4$fitted)
plot(model4$fitted,model4$res)
model4$std
plot(model3$fitted,model3$res)
?aov
search()
model3$std
model3$stdres
stdres(model3)
res(model3)
residuals(model3)
plot(fitted(model3),stdres(model3))
qqnorm(stdres(model3))
qqline(stdres(model3))
mean(residuals(model3))
plot(fitted(model3),stdres(model3))
?durbin-watson
library(lmtest)
install.packages("lmtest")
library(lmtest)
?dwtest()
dwtest(model3)
?t.test
t.test(residuals(model3))
t.test(residuals(model3),mu=0)
summary(t.test(residuals(model3),mu=0))
t.test(residuals(model3),mu=0)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dataset <- read.table("pipocabitch.txt",h=T)
View(dataset)
fator1 <- as.factor(dataset$fator)
fator1
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
summary(anovo)
fator <- as.factor(dataset$fator)
anovo <- aov(pirua~fator, data=dataset)
anovo
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
anovo
dataset$fator <- as.factor(dataset$fator)
?detach
detach(dataset)
dataset$fator <- as.factor(dataset$fator)
attach(dataset)
fator
anovo <- aov(pirua~fator,data=dataset)
anovo
summary(anovo)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?summary.factor
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?factor
shiny::runApp()
shiny::runApp()
model2
plot(model2)
plot(model2)
plot(model3)
shiny::runApp()
plot(data2)
runApp()
fator
dataset
shiny::runApp()
mean(fator)
fator
mean(data1)
mean(data1$oleo)
means <- c(mean(data1$oleo,data1$azeite,data1$marg,data1$mant))
means <- c(mean(data1$oleo),mean(data1$azeite),mean(data1$marg),mean(data1$mant))
means
aov
model2
means
barplot(means)
p1 <- nPlot(model2, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight (in lb)')
p1
library(rCharts)
p1 <- nPlot(model2, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight (in lb)')
p1
nplot(model2)
ae <- nplot(model2)
?nplot
require(devtools)
install_github('rNVD3', 'ramnathv')
install_github('ramnathv/rNVD3')
isntall.packages("rjson")
install.packages("rjson")
install_github('ramnathv/rNVD3')
library(rNVD3)
require(rNVD3)
install_github('ramnathv/rNVD3')
library(rNVD3)
?nplot
nplot(model2)
shiny::runApp()
runGithub("popcorn","slardardetenis")
library(shiny)
runGithub("popcorn","slardardetenis")
runGitHub("popcorn","slardardetenis")
runGitHub("multcompar","slardardetenis")
runGitHub("dashshiny","slardardetenis")
runGitHub("popcorn","slardardetenis")
runGitHub("dashshiny","slardardetenis")
shiny::runApp()
dataset
model3
model3
C.test(model3)
library(lmtest)
C.test(model3)
C.test(MASS)
library(MASS)
library(GAD)
C.test(model3)
View(dataset)
model <- lm(daset$pirua~as.factor(dataset$fator),data=dataset)
model <- lm(dataset$pirua~as.factor(dataset$fator),data=dataset)
model
model <- lm(dataset$pirua~as.factor(dataset$fator),data=dataset,weight=1/(2*dataset$pirua))
model
residuals(model)
stdres(model)
plot(stdres(model))
plot(fitted(model),res(model))
plot(fitted(model),residuals(model))
model
model <- aov(dataset$pirua~as.factor(dataset$fator),data=dataset,weight=1/(2*dataset$pirua))
model
plot(fitted(model),residuals(model))
model <- aov(log(dataset$pirua)~as.factor(dataset$fator),data=dataset)
model
plot(fitted(model),residuals(model))
C.test(model)
ls(model)
model$coefficients
model3$coefficients
model3
model
newdata <- cbind(dataset,log(dataset$pirua))
View(newdata)
names(newdata) <-
names(newdata) <- c("fator","perua","log(perua)")
View(newdata)
shiny::runApp()
View(newdata)
model
model1
model1 <model
model1 <- model
model1
model
model
model1
model2
model3
rm(model3)
model4
model3 <- model4
model4
plot(fitted(model3),residuals(model3))
C.test(model)
model1
model <- aov(dataset$perua~dataset$fator,data=dataset)
model <- aov(dataset$perua~as.factor(dataset$fator),data=dataset)
model <- aov(dataset$perua~as.factor(dataset$fator),data=dataset)
dataset
View(dataset)
names(dataset) <- c("fator","pirua")
names(dataset)
model <- aov(dataset$perua~as.factor(dataset$fator),data=dataset)
fator
View(dataset)
names(dataset) <- c("fator","perua")
model <- aov(dataset$perua~as.factor(dataset$fator),data=dataset)
model
plot(model)
ls(model)
plot(fitted(model))
fitted(model)
fitted.values(model)
rank(model)
qr(model)
ls(model)
assing(model)
assign(model)
model$assign
model$call
b <- model$call
b
b
rm(b)
b
ls(model)
model$terms
View(newdata)
View(dataset)
model
model1
dwtest(model)
dwtest(model1)
model1
dwtest(model)
qqnorm(data1$oleo)
qqline(data1$oleo)
qqnorm(data1$azeite)
qqline(data1$oleo)
runApp()
model1
model
boxcox(model1)
library(MASS)
boxcox(model)
?boxcox
boxcox(model,lambda=seq(-0.05,0.05))
boxcox(model,lambda=seq(-0.05,0.05,0.1))
boxcox(model)
boxcox(model,lambda=seq(-0.5,0.5,0.1))
boxcox(model,lambda=seq(-0.2,0.2,0.1))
shiny::runApp()
shiny::runApp()
?envelope
envelope(model2)
envelope(residuals(model2))
?envelope
b <- envelope(model2)
?qqnorm
qqnorm(residuals(model2))
qqline(residuals(model2))
shiny::runApp()
plot(residuals(model1))
model1
plot(residuals(model))
shiny::runApp()
qqnorm(data1$oleo)
shiny::runApp()
?dwtest
dwtest(model2)
model2
model1
dwtest(model1)
shiny::runApp()
?shapiro.test
shapiro.test(residuals(model1))
model1
shapiro.test(residuals(model2))
model2
model1
shapiro.test(model1)
shapiro.test(residuals(model1))
shapiro.test(residuals(model2))
model2
summary(model2)
summary(model2)
lin1 <lm(dataset$perua~as.factor(dataset$fator),data=dataset)
lin1 <-lm(dataset$perua~as.factor(dataset$fator),data=dataset)
lin1
summary(lin1)
lin2 <-lm(log(dataset$perua)~as.factor(dataset$fator),data=dataset)
summary(lin2)
shiny::runApp()
model1
model2
model
plot(residuals(model))
plot(residuals(model1))
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("shinythemes")
require(shinythemes)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
model
model1
model2
is model2 ==model1
model1
fator
qqnorm(fator)
?boxcox
boxcox(model1,col="red")
boxcox(model1)
model1
boxcox(model)
boxcox(model,col="red")
plot(boxcox(model))
plot(boxcox(model),pch=20)
boxcox(model)
test
test1
shiny::runApp()
?HSD.test
model1
vari <- HSD.test(model1,fator)
df <- df.residual(model1)
df
deviance(model1)
model1
deviance(model1)/df
MERes <- deviance(model1)/df
MERes
model1
vari <- HSD.test(model1,fator,df,MERes,group=TRUE)
vari
vari
HSD.test(model1,fator,df,MERes,group=TRUE)
HSD.test(model1,fator,df,MERes,group=TRUE)
model1
summary(vari)
fator
HSD.test(model1,fator,df,MERes,group=TRUE)
